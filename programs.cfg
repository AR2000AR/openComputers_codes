{
	["bank_dev_tools"] = {
		version = "1.0.0",
		name = "bank_dev_tools",
		repo = "tree/master/bank_dev_tools",
		description = "collection of tools used to help in the bank software development",
		note = "DEV ONLY",
		authors = "AR2000AR",
		files = 	{
			[":master/bank_dev_tools/bin"] = "/bin"
		}
	},
	["icable"] = {
		version = "0.1.0",
		name = "icable",
		repo = "tree/master/icable",
		description = "Use the internet card instead of the network card with osinetwork",
		authors = "AR2000AR",
		dependencies = 	{
			["osinetwork"] = "/",
			["datahashlib"] = "/"
		},
		files = 	{
			[":master/icable/lib"] = "/lib",
			[":master/icable/bin"] = "/bin"
		}
	},
	["bank_account_maker"] = {
		version = "1.0.0",
		name = "Account maker",
		repo = "tree/master/account_maker",
		description = "Machine to create one account per player and dispense a credit card",
		authors = "AR2000AR",
		dependencies = 	{
			["bank_api"] = "/"
		},
		files = 	{
			[":master/account_maker/bin"] = "/bin"
		}
	},
	["dns_server"] = {
		version = "1.1.0",
		name = "DNS server daemon",
		repo = "tree/master/dns_server",
		description = "this package provide the dns server",
		authors = "AR2000AR",
		dependencies = 	{
			["dns_common"] = "/"
		},
		files = 	{
			["master/dns_server/etc/rc.d/dnsd.lua"] = "//etc/rc.d"
		}
	},
	["stargate2_bios"] = {
		version = "1.1.0",
		name = "Stargate Ctl BIOS",
		repo = "tree/master/stargate_ctl2_bios",
		description = "A small BIOS compatible program to make a gate smart",
		note = "/usr/share/stargate/stargate.bios",
		authors = "AR2000AR",
		files = 	{
			[":master/stargate_ctl2_bios/share"] = "/share"
		}
	},
	["autocrafter"] = {
		version = "1.0.0",
		name = "AutoCrafter",
		repo = "tree/master/autocrafter",
		description = "User a robot linked via a linked card to craft item from a inventory",
		authors = "AR200AR",
		files = 	{
			[":master/autocrafter/bin"] = "/bin",
			[":master/autocrafter/misc"] = "/misc"
		}
	},
	["libclass"] = {
		version = "1.0.0",
		name = "libClass",
		repo = "tree/master/libClass",
		description = "Class library for lua",
		authors = "AR2000AR",
		files = 	{
			[":master/libClass/lib"] = "/lib"
		}
	},
	["libclass2"] = {
		version = "1.0.0",
		name = "libClass2",
		repo = "tree/master/libClass2",
		description = "A new and improved version of libclass, with cleaner syntax for cleaner code",
		authors = "AR2000AR",
		files = 	{
			[":master/libClass2/lib"] = "/lib"
		}
	},
	["lnfss"] = {
		version = "1.0.0",
		name = "Lua Network File System Server",
		repo = "tree/master/lnfs",
		description = "Share your local file system with other computers. Root folder is configurable in rc.cfg",
		authors = "AR2000AR",
		files = 	{
			[":master/lnfs/lnfss/rc.d"] = "//etc/rc.d",
			[":master/lnfs/lnfss/man"] = "/man"
		}
	},
	["lnfsc"] = {
		version = "1.0.0",
		name = "Lua Network File System Client",
		repo = "tree/master/lnfs",
		description = "Let you mount a files ystem hosted by a other computer using lnfss and use it as if it was a local file system",
		authors = "AR2000AR",
		files = 	{
			[":master/lnfs/lnfsc/lib"] = "/lib",
			[":master/lnfs/lnfsc/bin"] = "/bin"
		}
	},
	["libcb"] = {
		version = "2.0.0",
		name = "libCB",
		repo = "tree/master/libCB",
		description = "library used to read and write CB",
		note = "CB are unmanaged floppies",
		authors = "AR2000AR",
		files = 	{
			[":master/libCB/lib"] = "/lib",
			[":master/libCB/man"] = "/man"
		}
	},
	["dns_common"] = {
		version = "1.0.1",
		name = "DNS common files",
		repo = "tree/master/dns_common",
		description = "basic files used by the dns server as well as the resolver library",
		authors = "AR2000AR",
		dependencies = 	{
			["osinetwork"] = "/"
		},
		files = 	{
			[":master/dns_common/lib"] = "/lib",
			["?master/dns_common/etc/resolv.conf"] = "//etc"
		}
	},
	["item_id_catcher"] = {
		version = "1.0.0",
		name = "itemIdCatcher",
		repo = "tree/master/itemIdCatcher",
		description = "Write id of item in the chest on the top to a file",
		note = "item are moved to a other chest",
		authors = "AR2000AR",
		files = 	{
			[":master/itemIdCatcher/bin"] = "/bin",
			[":master/itemIdCatcher/man"] = "/man"
		}
	},
	["nslookup"] = {
		version = "1.0.0",
		name = "nslookup",
		repo = "tree/master/nslookup",
		description = "cmd line tool to querry a name server",
		authors = "AR2000AR",
		dependencies = 	{
			["dns_common"] = "/"
		},
		files = 	{
			["master/nslookup/bin/nslookup.lua"] = "/bin"
		}
	},
	["bank_atm"] = {
		version = "1.1.0",
		name = "bank atm",
		repo = "tree/master/bank_atm",
		description = "atm that work with my bank server",
		authors = "AR200AR",
		dependencies = 	{
			["libgui"] = "/",
			["bank_api"] = "/",
			["libcb"] = "/",
			["libcoin"] = "/",
			["libgui_extra"] = "/"
		},
		files = 	{
			[":master/bank_atm/bin"] = "/bin",
			[":master/bank_atm/share"] = "/share"
		}
	},
	["libtar"] = {
		version = "1.1.0",
		name = "libtar",
		repo = "tree/master/tar",
		description = "Librairy to extract and list the content of tar archive",
		authors = "AR2000AR, luarock",
		files = 	{
			["master/tar/lib/tar.lua"] = "/lib"
		}
	},
	["stargate2"] = {
		version = "1.2.0",
		name = "Stargate Ctl",
		repo = "tree/master/stargate_ctl2",
		description = "GUI to controll stargates from SGCraft",
		authors = "AR2000AR",
		dependencies = 	{
			["yawl"] = "/"
		},
		files = 	{
			[":master/stargate_ctl2/bin"] = "/bin",
			[":master/stargate_ctl2/share"] = "/share"
		}
	},
	["bank_api"] = {
		version = "1.1.0",
		name = "Bank API",
		repo = "tree/master/bank_api",
		description = "API used to send request to the bank server",
		note = "You will need to set the server address",
		authors = "AR2000AR",
		dependencies = 	{
			["osinetwork"] = "/"
		},
		files = 	{
			[":master/bank_api/lib"] = "/lib",
			[":master/bank_api/man"] = "/man",
			["?master/bank_api/etc/bank/api/api.conf"] = "//etc/bank/api"
		}
	},
	["door_ctrl"] = {
		version = "1.0.0",
		name = "Door controller",
		repo = "tree/master/doorCtrl",
		description = "Controll your doors with multiple redstone io block",
		authors = "AR2000AR",
		dependencies = 	{
			["libgui"] = "/",
			["libclass"] = "/"
		},
		files = 	{
			[":master/doorCtrl/bin"] = "/bin",
			["?master/doorCtrl/etc/doorCtrl.conf"] = "//etc"
		}
	},
	["yawl_example"] = {
		version = "1.7.1",
		name = "Yet Another Widget Library Example file",
		repo = "tree/master/yawl",
		description = "New version of libgui, but using libclass2 and cleaner code and interface.",
		note = "This is only a example file",
		authors = "AR2000AR",
		dependencies = 	{
			["yawl"] = "/"
		},
		files = 	{
			[":master/yawl/bin"] = "/bin"
		}
	},
	["yawl"] = {
		version = "1.7.1",
		name = "Yet Another Widget Library",
		repo = "tree/master/yawl",
		description = "New version of libgui, but using libclass2 and cleaner code and interface.",
		authors = "AR2000AR,Renno231",
		dependencies = 	{
			["libclass2"] = "/"
		},
		files = 	{
			[":master/yawl/lib"] = "/lib"
		}
	},
	["bank_client"] = {
		version = "1.2.1",
		name = "bank client app",
		repo = "tree/master/bank_client",
		description = "The client app for the banker",
		note = "WIP",
		authors = "AR2000AR, thofi",
		dependencies = 	{
			["libgui"] = "/",
			["libgui_extra"] = "/",
			["bank_api"] = "/",
			["libcb"] = "/"
		},
		files = 	{
			[":master/bank_client/share"] = "/share",
			[":master/bank_client/bin"] = "/bin"
		}
	},
	["stargate"] = {
		version = "1.0.0",
		name = "Stargate Ctl",
		repo = "tree/master/stargate_ctl",
		description = "GUI to controll stargates from SGCraft",
		authors = "AR2000AR",
		dependencies = 	{
			["libgui"] = "/"
		},
		files = 	{
			[":master/stargate_ctl/bin"] = "/bin",
			[":master/stargate_ctl/share"] = "/share"
		}
	},
	["osinetwork"] = {
		version = "2.4.2",
		name = "OSI Network stack",
		repo = "tree/master/network",
		description = "A close to official rfc emulation of the OSI layers for OpenOS. Include Ethernet, ARP, ICMP, UDP. Also provide a luasocket libe librairy",
		note = "Are provided : ping, ifup, ifdown, arp, nc, netstat. Any one of theses tools may be moved to a separate package at any time",
		authors = "AR2000AR",
		dependencies = 	{
			["libclass2"] = "/"
		},
		files = 	{
			[":master/network/lib"] = "/lib",
			[":master/network/bin"] = "/bin",
			["master/network/boot/30_network.lua"] = "//boot",
			["?master/network/etc/network/interfaces"] = "//etc/network"
		}
	},
	["pm"] = {
		version = "1.2.3",
		name = "pm Package Manager",
		repo = "tree/master/pm",
		description = "Package manager for OpenOS",
		authors = "AR2000AR",
		dependencies = 	{
			["libtar"] = "/"
		},
		files = 	{
			["master/pm/bin/pm.lua"] = "/bin",
			["master/pm/lib/pm.lua"] = "/lib"
		}
	},
	["libgui_extra"] = {
		version = "1.0.0",
		name = "libGUI-extra",
		repo = "tree/master/libGUI-extra",
		description = "more widgets for the libGUI",
		authors = "AR2000AR, thofi",
		dependencies = 	{
			["libgui"] = "/"
		},
		files = 	{
			[":master/libGUI-extra/lib"] = "/lib"
		}
	},
	["crypttool"] = {
		version = "1.0.0",
		name = "CryptTool",
		repo = "tree/master/crypttool",
		description = "Remount a filesystem and store everything as encrypted data. Use managed (default) floppy or HDD",
		authors = "AR2000AR",
		files = 	{
			[":master/crypttool/bin"] = "/bin",
			[":master/crypttool/lib"] = "/lib"
		}
	},
	["bank_server"] = {
		version = "1.1.1",
		name = "Bank server",
		repo = "tree/master/bank_server",
		description = "The bank server service",
		note = "enable it with the rc command",
		authors = "AR2000AR",
		dependencies = 	{
			["libcb"] = "/",
			["osinetwork"] = "/"
		},
		files = 	{
			[":master/bank_server/rc.d"] = "//etc/rc.d",
			[":master/bank_server/bin"] = "/bin"
		}
	},
	["pm_get"] = {
		version = "1.3.4",
		name = "pm get",
		repo = "tree/master/pm_get",
		description = "Download and install package for pm",
		authors = "AR2000AR",
		dependencies = 	{
			["pm"] = "/"
		},
		files = 	{
			["master/pm_get/bin/pm-get.lua"] = "/bin",
			["?master/pm_get/etc/pm/sources.list"] = "//etc/pm"
		}
	},
	["libcoin"] = {
		version = "1.0.0",
		name = "libCoin",
		repo = "tree/master/libCoin",
		description = "small library used to moved coins from ordinarycoins from one chest to a other",
		authors = "AR2000AR",
		files = 	{
			[":master/libCoin/lib"] = "/lib"
		}
	},
	["vending"] = {
		version = "1.0.0",
		name = "Vending",
		repo = "tree/master/vending",
		description = "Vending machine program compatible with libCoin and bank_api",
		authors = "AR2000AR",
		dependencies = 	{
			["libCoin"] = "/",
			["bank_api"] = "/"
		},
		files = 	{
			[":master/vending/bin"] = "/bin",
			[":master/vending/etc/vending"] = "//etc/vending"
		}
	},
	["libgui"] = {
		version = "1.0.0",
		name = "libGUI",
		repo = "tree/master/libGUI",
		description = "library used to create gui \n The library can load \"pam\" images",
		note = "transparency in pam image isn't fully supported. Only fully transparent pixel are recognized as such",
		authors = "AR2000AR",
		dependencies = 	{
			["libclass"] = "/"
		},
		files = 	{
			[":master/libGUI/lib"] = "/lib",
			[":master/libGUI/bin"] = "/bin"
		}
	},
	["instgen"] = {
		version = "1.0.0",
		name = "Repo installer",
		repo = "tree/master/repo-installer",
		description = "A set of tools for making installable floppies for OpenComputers from OPPM repositories.",
		authors = "Izaya, AR2000AR",
		files = 	{
			[":master/repo-installer/bin"] = "/bin",
			[":master/repo-installer/misc"] = "/misc"
		}
	},
	["datahashlib"] = {
		version = "1.2.0",
		name = "data hash library",
		repo = "tree/master/datahashlib",
		description = "provide the sha256 algo.",
		authors = "AR2000AR, Roberto Ierusalimschy",
		files = 	{
			[":master/datahashlib/lib"] = "/lib"
		}
	}
}